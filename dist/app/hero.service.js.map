{"version":3,"sources":["hero.service.ts"],"names":[],"mappings":"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","file":"hero.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Hero } from './hero';\r\n\r\n@Injectable()\r\nexport class HeroService {\r\n\r\n\tconstructor(private http: Http) { }\r\n\r\n\theroesUrl = 'http://lab.localhost/angular2/angular2-tour-of-heroes/api/methods.php';\r\n\r\n\tprivate handleError(error: any) {\r\n\t  console.error('An error occurred', error);\r\n\t  return Promise.reject(error.message || error);\r\n\t}\r\n\r\n\tgetHeroes(): Promise<Hero[]> {\r\n\t    return this.http.get('app/heroes.json')\r\n\t               .toPromise()\r\n\t               .then(response => response.json().data)\r\n\t               .catch(this.handleError);\r\n\t}\r\n\r\n\r\n\tgetHero(id: number) {\r\n  \t\treturn this.getHeroes()\r\n             .then(heroes => heroes.filter(hero => hero.id === id)[0]);\r\n\t}\r\n\r\n\tprivate post(hero: Hero): Promise<Hero> {\r\n\t  let headers = new Headers({\r\n\t    'Content-Type': 'application/json'});\r\n\r\n\t  return this.http\r\n\t             .post(this.heroesUrl, JSON.stringify(hero), {headers: headers})\r\n\t             .toPromise()\r\n\t             .then(res => res.json().data)\r\n\t             .catch(this.handleError);\r\n\t}\t\r\n\r\n\tprivate put(hero: Hero) {\r\n\t  let headers = new Headers();\r\n\t  headers.append('Content-Type', 'application/json');\r\n\r\n\t  let url = `${this.heroesUrl}/${hero.id}`;\r\n\r\n\t  return this.http\r\n\t             .put(url, JSON.stringify(hero), {headers: headers})\r\n\t             .toPromise()\r\n\t             .then(() => hero)\r\n\t             .catch(this.handleError);\r\n\t}\r\n\r\n\tdelete(hero: Hero) {\r\n\t  let headers = new Headers();\r\n\t  headers.append('Content-Type', 'application/json');\r\n\r\n\t  let url = `${this.heroesUrl}/${hero.id}`;\r\n\r\n\t  return this.http\r\n\t             .delete(url, headers)\r\n\t             .toPromise()\r\n\t             .catch(this.handleError);\r\n\t}\r\n\r\n\tsave(hero: Hero): Promise<Hero>  {\r\n\t  if (hero.id) {\r\n\t    return this.put(hero);\r\n\t  }\r\n\t  return this.post(hero);\r\n\t}\t\r\n\r\n}"],"sourceRoot":"/source/"}